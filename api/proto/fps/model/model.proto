// Frontline Perception System
// Copyright (C) 2020-2025 TurbineOne LLC
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// model.proto includes messages that describe a model in the FPS system, for
// both inter-OBOS and UI websocket comms.

syntax = "proto3";

option go_package = "github.com/TurbineOne/ffmpeg-framer/api/proto/gen/go/fps/model";
package t1.fps.model;

// ModelKey uniquely identifies a model and gives it a human name.
// Note that different implementations of the same model may have different
// docker hashes (e.g., different targets) so this is the unique key.
message ModelKey {
  string title = 1;
  string version = 2;
  string vendor = 3;
  string data_set_uuid = 4;  // UUID of the data set used to train the model.
}

// ModelInfo describes the characteristics of a model.
message ModelInfo {
  ModelKey key = 1;
  repeated string tags = 2;        // Optional; Usually tags from the docker repo or elsewhere.
  map<string, string> labels = 3;  // Key:Value labels, defined in our Labels doc.
  string model_id = 4;  // Docker Shortened Image Hash. Unique ID for this model instance.
}

// ModelStatus describes the real-time status of an active model instance,
// including any statistics.
message ModelStatus {
  ModelInfo info = 1;
}
